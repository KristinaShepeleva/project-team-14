{"mappings":"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","sources":["src/js/swiper.js","src/js/modal.js","src/js/menu-mobile.js"],"sourcesContent":["const swiper = new Swiper('.swiper', {\n  // Optional parameters\n  direction: 'horizontal',\n  loop: true,\n\n  // If we need pagination\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n   dynamicBullets: true,\n  },\n  autoHeight: true,\n\n  autoplay: {\n    delay: 2000,\n    disableOnInteraction:true\n  }\n \n});\n\n\n","!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this,\n          o = (t.document || t.ownerDocument).querySelectorAll(e),\n          n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n    (e.closest = function (e) {\n      for (var t = this; t && 1 === t.nodeType;) {\n        if (t.matches(e)) return t;\n        t = t.parentNode;\n      }\n      return null;\n    });\n})(window.Element.prototype);\n\nlet currentModalWindow;\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-overlay-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector(\n          '.modal[data-modal=\"' + modalId + '\"]'\n        );\n      currentModalWindow = modalElem;\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n\n      // Делаю динамическое изменение позиционирование модального окна в зависимости от его высоты.\n      if (window.innerHeight < modalElem.offsetHeight) {\n        const modalFromTop = window.pageYOffset + 30;\n\n        modalElem.style.left = ' 50%';\n        modalElem.style.transform = 'translateX(-50%)';\n        modalElem.style.position = 'absolute';\n        modalElem.style.top = `${modalFromTop}px`;\n      } else {\n        modalElem.style.position = 'fixed';\n        modalElem.style.top = '50%';\n        modalElem.style.left = '50%';\n        modalElem.style.transform = 'translate(-50%, -50%)';\n      }\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      removeClassListStyle(currentModalWindow);\n      var parentModal = this.closest('.modal');\n\n      parentModal.classList.remove('active');\n      // parentModal.removeAttribute('position');\n      document.querySelector('.overlay').classList.remove('active');\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        removeClassListStyle(currentModalWindow);\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener('click', function (e) {\n    document.querySelector('.modal.active').classList.remove('active');\n\n    this.classList.remove('active');\n\n    removeClassListStyle(currentModalWindow);\n  });\n}); // end ready\n\n// Remove overlay style function on modal close\nfunction removeClassListStyle(elem) {\n  elem.style.position = '';\n  elem.style.top = '';\n  elem.style.left = '';\n  elem.style.transform = '';\n}\n\ndocument\n  .querySelector('button.extras__scroll-to-top')\n  .addEventListener('click', e => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  });","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 1200px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();"],"names":["Swiper","direction","loop","pagination","el","clickable","dynamicBullets","autoHeight","autoplay","delay","disableOnInteraction","e1","$8a7e756c566dd1ea$var$currentModalWindow","$8a7e756c566dd1ea$var$removeClassListStyle","elem","style","position","top","left","transform","mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","forEach","item","modalElem","modalId","add","innerHeight","offsetHeight","modalFromTop","pageYOffset","keyCode","scrollTo","behavior"],"version":3,"file":"index.a0c4ef39.js.map"}